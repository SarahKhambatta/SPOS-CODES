#include <iostream>
#include <map>
#include <vector>
#include <string>
#include <iomanip>
#include <sstream>

using namespace std;

struct Symbol {
    string name;
    int address;
};

map<string, Symbol> symbolTable;
vector<string> intermediateCode;
int currentAddress = 0;

void pass1() {
    string lines[] = {
        "START 100",
        "LOOP  ADD A",
        "      WORD 10",
        "      RESW 5",
        "      END"
    };

    for (const auto &line : lines) {
        istringstream iss(line);
        string instruction;
        iss >> instruction;

        if (instruction == "START") {
            iss >> currentAddress;
        } else if (instruction == "END") {
            break;
        } else if (instruction == "WORD") {
            currentAddress += 1;
        } else if (instruction == "RESW") {
            int size;
            iss >> size;
            currentAddress += size;
        } else if (instruction == "RESB") {
            int size;
            iss >> size;
            currentAddress += size;
        } else {
            Symbol sym;
            sym.name = instruction;
            sym.address = currentAddress;
            symbolTable[instruction] = sym;
            intermediateCode.push_back(line);
            currentAddress += 1;
        }
    }
}

void pass2() {
    cout << "Address\tOpcode\n";
    for (const auto &line : intermediateCode) {
        istringstream iss(line);
        string instruction;
        iss >> instruction;

        if (instruction == "START" || instruction == "END") {
            continue;
        }

        string opcode;
        iss >> opcode;

        if (symbolTable.find(opcode) != symbolTable.end()) {
            cout << setw(5) << symbolTable[opcode].address << "\t" << opcode << "\n";
        } else {
            cout << setw(5) << currentAddress << "\t" << opcode << "\n";
        }
    }
}

int main() {
    pass1();

    cout << "\nSymbol Table:\n";
    cout << "Name\tAddress\n";
    for (const auto &pair : symbolTable) {
        cout << pair.second.name << "\t" << pair.second.address << "\n";
    }
    
    pass2();
    return 0;
}
